package com.doobs.exort.math.matrix;

public class Matrix {
    private double[] data;
    private int dimension;

    /**
     * Post: Creates an "n" by "n" identity Matrix.
     */
    public Matrix(int n) {
	this.data = new double[n * n];
	this.dimension = n;
	this.loadIdentity();
    }

    /**
     * Pre: "data" represents a square Matrix.
     * 
     * Post: Creates a Matrix with "data" as its entries.
     */
    public Matrix(double[] data) {
	this.data = data;
	this.dimension = (int) Math.sqrt(data.length);
    }

    /**
     * Post: Replaces this Matrix with the identity Matrix.
     */
    public void loadIdentity() {
	for (int i = 0; i < this.dimension; i++) {
	    for (int j = 0; j < this.dimension; j++) {
		if (i == j) {
		    this.data[i * this.dimension + j] = 1;
		} else {
		    this.data[i * this.dimension + j] = 0;
		}
	    }
	}
    }

    /**
     * Post: Returns the resulting Matrix from this Matrix multiplied by
     * "other".
     */
    public Matrix multiply(Matrix other) {
	if (this.dimension != other.dimension) {
	    throw new IllegalArgumentException(
		    "Both matrices must be of the same dimension.");
	}
	Matrix result = new Matrix(this.dimension);
	// TODO: Implement
	return result;
    }
}
