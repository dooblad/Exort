import java.util.*;

public class Test {
    public static void main(String[] args) {
	printLowestDifficulty(3);
    }

    /**
     * Post: Returns the smallest number with "difficulty".
     */
    public static void printLowestDifficulty(int difficulty) {
	int n = 0;
	while (!difficultyMatches(n, difficulty)) {
	    n += 1;
	}
	System.out.println("The smallest number with difficulty " + difficulty
		+ " is " + n);
    }

    /**
     * Pre: "min" >= 0. Otherwise, throws IllegalArgumentException.
     * 
     * Post: Returns a List of all numbers with "difficulty" between "min" and
     * "max" (inclusive).
     */
    public static List<Integer> findDifficulties(int difficulty, int min,
						 int max) {
	if (min < 0) {
	    throw new IllegalArgumentException("\"min\" must be nonnegative.");
	}
	List<Integer> result = new ArrayList<Integer>();
	for (int n = Math.max(0, min); n <= max; n++) {
	    if (difficultyMatches(n, difficulty)) {
		result.add(n);
	    }
	}
	return result;
    }

    /**
     * Post: Returns true if "n" has "difficulty".
     */
    public static boolean difficultyMatches(int n, int difficulty) {
	if (n < 10 && difficulty == 0) {
	    return true;
	} else if (n >= 10 && difficulty > 0) {
	    int digitProduct = 1;
	    while (n != 0) {
		digitProduct *= n % 10;
		n /= 10;
	    }
	    return difficultyMatches(digitProduct, difficulty - 1);
	}
	return false;
    }
}
